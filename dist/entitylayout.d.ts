// Generated by dts-bundle v0.7.3

declare module 'entitylayout' {
    import { LayoutRow } from "entitylayout/layoutrow";
    import { Entity } from "entitylayout/entity";
    import { LayoutColumn } from "entitylayout/layoutcolumn";
    import { IEntityLayout } from "entitylayout/interfaces/IEntityLayout";
    export class EntityLayout {
        rows: Array<LayoutRow>;
        constructor(numberColumns: number);
        openPopup(col: LayoutColumn): void;
        addEntities(ents: Array<Entity>): void;
        addRow(): LayoutRow;
        render(): string;
        serializer(): IEntityLayout;
        reset(): void;
        clear(): void;
        parser(object: IEntityLayout): void;
        getEntities(): Entity[];
        getNumberColumns(): number;
        assignEntity(id: string, col: LayoutColumn): void;
        getUI(): HTMLDivElement;
        get_entity(): Entity[];
    }
}

declare module 'entitylayout/layoutrow' {
    import { LayoutColumn } from "entitylayout/layoutcolumn";
    import { EntityLayout } from "entitylayout/entitylayout";
    import { ILayoutRow } from "entitylayout/interfaces/ILayoutRow";
    export class LayoutRow {
        columns: Array<LayoutColumn>;
        div: HTMLDivElement;
        constructor(el: EntityLayout);
        getColumn(): LayoutColumn[];
        addColumn(): LayoutColumn;
        destroy(): void;
        render(): HTMLDivElement;
        clear(): void;
        serializer(): ILayoutRow;
        parser(object: ILayoutRow): void;
    }
}

declare module 'entitylayout/entity' {
    import { IEntity } from "entitylayout/interfaces/IEntity";
    export class Entity implements IEntity {
        id: string;
        constructor(id: string);
        render(): HTMLDivElement;
    }
}

declare module 'entitylayout/layoutcolumn' {
    import { EntityLayout } from "entitylayout/entitylayout";
    import { Entity } from "entitylayout/entity";
    import { ILayoutColumn } from "entitylayout/interfaces/ILayoutColumn";
    import { LayoutRow } from "entitylayout/layoutrow";
    export class LayoutColumn {
        div: HTMLDivElement;
        constructor(el: EntityLayout, row: LayoutRow);
        destroy(): void;
        getEntity(): Entity;
        deleteEntity(): void;
        setEntity(ent: Entity): void;
        render(): HTMLDivElement;
        serializer(): ILayoutColumn;
        clear(): void;
        setDim(dim: number): void;
        parser(object: ILayoutColumn): void;
    }
}

declare module 'entitylayout/interfaces/IEntityLayout' {
    import { ILayoutRow } from "entitylayout/interfaces/ILayoutRow";
    export interface IEntityLayout {
        rows: Array<ILayoutRow>;
    }
}

declare module 'entitylayout/interfaces/ILayoutRow' {
    import { ILayoutColumn } from "entitylayout/interfaces/ILayoutColumn";
    export interface ILayoutRow {
        columns: Array<ILayoutColumn>;
    }
}

declare module 'entitylayout/interfaces/IEntity' {
    export interface IEntity {
        id: string;
        render(): HTMLDivElement;
    }
}

declare module 'entitylayout/interfaces/ILayoutColumn' {
    export interface ILayoutColumn {
        entID: string;
        dim: number;
    }
}

